{"version":3,"sources":["components/NavBar.js","components/PetCard.js","components/PetList.js","components/HealthTipCard.js","components/HealthTips.js","pages/HomePage.js","components/LoginForm.js","components/SignupForm.js","pages/Login.js","pages/NewPet.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","setUser","to","onClick","fetch","method","then","r","ok","PetCard","id","name","age","weight","sex","healthIssue","type","petImage","Card","Content","Image","className","src","alt","Meta","Description","PetList","useState","pets","setPets","useEffect","json","length","map","pet","type_of_pet","pet_image","health_issues","HealthTipCard","text","HealthTips","healthTips","setHealthTips","data","tips","tip","randomTip","Math","floor","random","Container","HomePage","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","headers","body","JSON","stringify","error","value","onChange","target","SignUpForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","Login","showLoginForm","setShowLoginForm","Button","SignupForm","NewPet","setName","setType","setAge","setSex","setWeight","setHealthIssue","setPetImage","navigate","useNavigate","formData","FormData","append","accept","files","Header","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f99a9146.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\n\nfunction NavBar({user, setUser}) {\n\n    function handleLogout(){\n        fetch('/api/logout', {\n            method: \"DELETE\"\n        }).then((r) => {\n            if (r.ok) {\n                setUser(null)\n            }\n        })\n    }\n    return (\n        <>\n        <h1>\n            <Link to='/'>My Pet's Health</Link>\n        </h1>\n        <nav>\n            <button onClick={handleLogout}>Logout</button>\n        </nav>\n        <nav>\n            <button>\n                <Link to='/new'>NewPet</Link>\n            </button>\n        </nav>\n        \n        </>\n    )\n\n}\n\nexport default NavBar","import {Card, Image } from 'semantic-ui-react';\n\n\nfunction PetCard({id, name, age, weight, sex, healthIssue, type, petImage }) {\n\n    function handleDeletePet() {\n        fetch(`/api/pets/:${id}`, {\n           method: \"DELETE\"\n        })\n\n    }\n\n    return(\n        <>\n        <Card>\n            <Card.Content>\n                <h3>{name}</h3>\n                <Image className='pet-image' src={petImage} alt=\"my pet\"></Image>\n                <Card.Meta>\n                    <span>\n                    {sex} \n                    </span>\n                    <br></br>\n                    <span>{type}</span>\n                    \n                    </Card.Meta>\n                    <Card.Description>\n                       <span>Age: {age}</span> \n                       <br></br>\n                       <span>Weight: {weight} lbs</span>\n                       <br></br>\n                       <span>Health issues: {healthIssue}</span>\n                       <br></br>\n                       <span><button id='delete-pet' \n                onClick={handleDeletePet}\n                \n                >Delete</button>\n                </span>\n                        </Card.Description>\n\n            </Card.Content>\n        </Card>\n        </>\n    )\n}\n\nexport default PetCard;","import {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport PetCard from './PetCard';\n\nfunction PetList() {\n\n    const [pets, setPets] = useState([]);\n\n\n    useEffect(() => {\n        fetch('/api/pets')\n        .then((r) => r.json())\n        .then(setPets)\n\n    }, []);\n\n\n    return (\n        <>\n        {pets.length > 0 ? (\n            pets.map((pet) => (\n                <PetCard key={pet.id} id={pet.id} name={pet.name} weight={pet.weight} type={pet.type_of_pet} sex={pet.sex} age={pet.age} petImage={pet.pet_image} healthIssue={pet.health_issues} />\n            ))\n        ) : (\n            <>\n            <h2>No Pets Found</h2>\n            <button>\n                <Link to='/new'> Add a pet\n                </Link>\n            </button>\n            </>\n        )}\n\n        </>\n    )\n}\n\nexport default PetList;",";\n\nfunction HealthTipCard({text}) {\n\n    return (\n        <>\n         \n     \n            <p>{text}</p>\n        \n    \n        </>\n    )\n}\n\nexport default HealthTipCard","import { useEffect, useState} from 'react';\nimport {List, Container} from 'semantic-ui-react';\nimport HealthTipCard from './HealthTipCard';\n\nfunction HealthTips() {\n\n    const [healthTips, setHealthTips] = useState([]);\n    \n    useEffect(() => {\n        fetch('/api/health_tips')\n        .then((r) => r.json())\n        .then((data) => setHealthTips(data))\n    },[])\n    const tips = healthTips.map((tip) => (\n        <HealthTipCard key={tip.id} text={tip.text}>\n            </HealthTipCard>\n    ))\n    const randomTip = tips[Math.floor(Math.random() * tips.length)]\n\n    return (\n        <>\n        <Container className='body'>\n        <h2>Health Tips for Your Furry Friend</h2>\n        <h4>\n        {randomTip}\n        </h4>\n        </Container>\n      \n        </>\n    )\n}\n\nexport default HealthTips;","import PetList from '../components/PetList';\nimport HealthTips from '../components/HealthTips';\n\nfunction HomePage() {\n\n    return (\n        <>\n        <HealthTips/>\n        <PetList />\n        </>\n    )\n}\n\nexport default HomePage;","import { useState } from 'react';\n\nfunction LoginForm({onLogin}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch('/api/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username, password}),\n        }).then((r) => {\n            if (r.ok) {\n                r.json().then((user) => onLogin(user));\n                \n            }else{\n                r.json().then((error) => setErrors(error.errors));\n            }\n        });\n    }\n\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n            <label>Username</label>\n            <input\n            type='text'\n            id='username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            >\n            </input>\n            <label>Password</label>\n            <input\n            type='password'\n            id='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <button type='submit'>Login</button>\n            <p>{errors.map((error) => (\n                <li>{error}</li>\n            ))}</p>\n        </form>\n        </>\n    )\n}\n\nexport default LoginForm;","import {useState} from 'react';\n\n\nfunction SignUpForm({onLogin}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    function handleSignupSubmit(e) {\n        e.preventDefault();\n        fetch('/api/signup', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }, \n            body: JSON.stringify({\n                username, \n                password,\n                password_confirmation: passwordConfirmation\n            }),\n        }).then((r) => {\n            if (r.ok) {\n                r.json().then((user) => onLogin(user));\n            }else{\n                r.json().then((error) => setErrors(error.errors))\n            }\n        });\n\n    }\n\n\n    return(\n        <form onSubmit={handleSignupSubmit}>\n            <label>Username: </label>\n            <input \n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            ></input>\n            <br></br>\n            <label>Password: </label>\n            <input\n            type=\"password\"\n            id='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <br></br>\n            <label>Password Confirmation: </label>\n            <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            value={passwordConfirmation}\n            onChange={(e)=> setPasswordConfirmation(e.target.value)}\n            ></input>\n            <br></br>\n            <button type='submit'>Sign Up</button>\n            <p>{errors.map((error) => (\n                <li>{error}</li>\n            ))}\n                </p>\n        </form>\n    )\n}\n\nexport default SignUpForm;","import { useState } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport SignupForm from '../components/SignupForm';\nimport { Button } from 'semantic-ui-react'\n\nfunction Login({ onLogin }) {\n\n    const [showLoginForm, setShowLoginForm] = useState(true)\n\n    return (\n        <div>\n            <h1>My Pet's Health</h1>\n            {showLoginForm ? (\n                <>\n                <LoginForm onLogin={onLogin}/>\n                <p>Don't have an account? \n                    <Button\n                    onClick={() => setShowLoginForm(false)}> Sign Up\n                    </Button>\n                </p>\n                </>\n\n            ) : (\n                <>\n                <SignupForm onLogin={onLogin}/>\n                <p>\n                    Already have an account? \n                    <Button onClick={() => setShowLoginForm(true)}>\n                        Log In\n                    </Button>\n                </p>\n                </>\n            )}\n        </div>\n    )\n    \n}\n\n\n\nexport default Login;","import { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {Card, Image } from 'semantic-ui-react';\n\nfunction NewPet({user}) {\n\n    // const [formData, setFormData] = useState({\n    //     name: '',\n    //     type: '',\n    //     sex: '',\n    //     age: '',\n    //     weight: '',\n    //     healthIssues: '',\n    //     imageUrl: ''\n    // });\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n    const [age, setAge] = useState('');\n    const [sex, setSex] = useState('');\n    const [weight, setWeight] = useState('');\n    const [healthIssue, setHealthIssue] = useState('');\n    const [petImage, setPetImage] = useState(null)\n    \n    // const [imageUrl, setImageUrl] = useState('');\n    const [errors, setErrors] = useState([]);\n    const navigate = useNavigate();\n\n\n\n\n\n    function handleSubmitPet(e) {\n        e.preventDefault();\n\n        const formData = new FormData();\n        // formData.append('user_id', user.id)\n        formData.append('name', name)\n        formData.append('age', age)\n        formData.append('weight', weight)\n        formData.append('sex', sex)\n        formData.append('type_of_pet', type)\n        formData.append('health_issues', healthIssue)\n        formData.append('pet_image', petImage)\n    \n        fetch('/api/pets', {\n            method: \"POST\",\n            // headers: {\n            //     \"Content-Type\": \"application/json\",\n            // },\n            // body: JSON.stringify({\n            //     name,\n            //     type_of_pet: type,\n            //     sex,\n            //     age,\n            //     weight,\n            //     health_issues: healthIssue,\n            //     image_url: imageUrl\n            body: formData\n            })\n        .then((r) => {\n            if(r.ok) {\n               navigate('/');\n            }else {\n                r.json().then((error)=> {\n                    setErrors(error)\n                });\n            }\n        });\n    }\n    \n    // const [file, setFile] = useState(null);\n\n    // function handleFileChange(e) {\n    //     setFile(e.target.files[0])\n    // }\n\n    return(\n        <>\n        <h2>Add a Pet</h2>\n        <form onSubmit={handleSubmitPet}>\n            <label>Name: </label>\n            <input\n            type=\"text\"\n            id=\"pet-name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ></input>\n            <label>Type: </label>\n            <input\n            type=\"text\"\n            id=\"pet-type\"\n            value={type}\n            onChange={(e) => setType( e.target.value)}\n            ></input>\n              <label>Sex: </label>\n            <input\n            type=\"text\"\n            id=\"pet-sex\"\n            value={sex}\n            onChange={(e) => setSex( e.target.value)}\n            ></input>\n              <label>Age: </label>\n            <input\n            type=\"text\"\n            id=\"pet-age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            ></input>\n              <label>Weight: </label>\n            <input\n            type=\"text\"\n            id=\"pet-weight\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n            ></input>\n              <label>Health Issues: </label>\n            <input\n            type=\"text\"\n            id=\"pet-health-issue\"\n            value={healthIssue}\n            onChange={(e) => setHealthIssue( e.target.value)}\n            ></input>\n\n            <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setPetImage(e.target.files[0])}\n            ></input>\n                  {/* <label htmlFor=\"imageUrl\">Image Url: </label>\n            <input\n            type=\"text\"\n            id=\"image-url\"\n            value={imageUrl}\n            onChange={(e) => setImageUrl( e.target.value)}\n            ></input> */}\n              \n            <button type='submit'>Submit</button>\n            <p>{errors.map((error) => (\n                <li>{error}</li>\n            ))}\n                </p>\n        </form>\n        {/* <form onSubmit={submitPhoto}>\n        <label>Input Image</label>\n            <input\n            type=\"file\"\n            id=\"pet-image-input\"\n            accept={\"image/png, image/jpeg\"}\n            // value=\"Upload\"\n            // onChange={handleFileChange}\n            ></input>\n\n        </form> */}\n        <Card className='cards'>\n            <Card.Content>\n\n                <Card.Header>{name}</Card.Header>\n                <Image className='pet-image' src={petImage}></Image>\n                <Card.Description>{age} year old {type} with {healthIssue}. Weighs {weight} lbs. Belongs to {user.username}</Card.Description>\n            </Card.Content>\n        </Card>\n\n        \n        </>\n    )\n}\n\nexport default NewPet;\n\n","import { useState, useEffect} from 'react'\nimport {  Routes, Route } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport HomePage from '../pages/HomePage';\nimport Login from '../pages/Login';\nimport NewPet from '../pages/NewPet';\n// import HealthTips from './HealthTips';\n// import PetList from './PetList';\n\nfunction App() {\n\n   const [user, setUser] = useState(null);\n\n   useEffect(() => {\n        fetch('/api/me').then((r) => {\n            if (r.ok) {\n                r.json().then((user) => setUser(user));\n            }\n        });\n    }, []);\n\n\n    if (!user) return <Login  onLogin={setUser} />;\n\n\n  return (\n    <div>\n        \n        <NavBar user={user} setUser={setUser}/>\n        <main>\n          <Routes>\n            <Route exact path='/new' element={<NewPet user={user}/>}>\n            </Route>\n            <Route exact path='/' element={<HomePage/>}>\n            </Route>\n          </Routes>\n\n        </main>\n   \n  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}