{"version":3,"sources":["components/NavBar.js","components/HealthLog.js","components/PetCard.js","components/PetList.js","components/HealthTipCard.js","components/HealthTips.js","pages/HomePage.js","components/LoginForm.js","components/SignupForm.js","pages/Login.js","pages/NewPet.js","components/EditPet.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","setUser","username","className","to","id","onClick","fetch","method","then","r","ok","HealthLog","initialView","headerToolbar","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","editable","selectable","selectMirror","select","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","start","startStr","end","endStr","headers","body","JSON","stringify","pet_id","json","data","console","log","events","url","color","textColor","eventClick","clickInfo","window","confirm","event","remove","PetCard","pet","selectPet","onDeletePet","onUpdatePet","name","sex","age","weight","petImage","pet_image","healthIssue","health_issues","type","type_of_pet","useState","showLog","setShowLog","Card","Content","Image","src","alt","Description","PetList","pets","setPets","handleDeletePet","updatedPets","filter","length","map","HealthTipCard","text","HealthTips","healthTips","setHealthTips","useEffect","tips","tip","randomTip","Math","floor","random","Container","HomePage","selectedPet","setSelectedPet","LoginForm","onLogin","setUsername","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","error","value","onChange","target","SignUpForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","err","Login","showLoginForm","setShowLoginForm","Button","SignupForm","NewPet","setName","setType","setAge","setSex","setWeight","setHealthIssue","setPetImage","navigate","useNavigate","formData","FormData","append","accept","files","EditPet","onPetChange","setPetId","App","petObj","exact","path","element","_","updatedPetList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39e652c8.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\n\nfunction NavBar({user, setUser}) {\n\n    function handleLogout(){\n        fetch('/api/logout', {\n            method: \"DELETE\"\n        }).then((r) => {\n            if (r.ok) {\n                setUser(null)\n            }\n        })\n    }\n    return (\n        <>\n         <h3>Welcome, {user.username}!</h3>\n        <h1 className='title'>\n            <Link to='/'>Healthy Pets!</Link>\n        </h1>\n        <nav>\n            <button id='logout-button' onClick={handleLogout}>Logout</button>\n        </nav>\n        <nav>\n            <button id='new-pet-button'>\n                <Link to='/new'>NewPet</Link>\n            </button>\n        </nav>\n        \n        </>\n    )\n\n}\n\nexport default NavBar","import FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from '@fullcalendar/interaction';\n\n\nfunction HealthLog({id}) {\n   \n     const handleDateSelect = (selectInfo) => {\n        let title = prompt('Please enter a new title for your event')\n        let calendarApi = selectInfo.view.calendar\n    \n        calendarApi.unselect() // clear date selection\n    \n        if (title) {\n          calendarApi.addEvent({\n            title,\n            start: selectInfo.startStr,\n            end: selectInfo.endStr\n          })\n\n          fetch(\"api/events\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n            \n                title: title,\n                pet_id: id,\n                start: selectInfo.startStr,\n                end: selectInfo.endStr\n            }),\n          })\n          .then((r) => r.json())\n          .then((data) => console.log(data))\n        }\n  \n      }\n\n    const handleEventClick = (clickInfo) => {\n      if(window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'?`)) {\n\n        clickInfo.event.remove();\n\n        fetch(`api/events/${clickInfo.event.id}`, \n          {\n          method: \"DELETE\"\n          }\n        )\n      }\n    }\n    return (\n        <>\n        <div id=\"calendar\"> \n        <FullCalendar \n        initialView=\"timeGridWeek\"\n\n        headerToolbar={{\n            left: \"prev,next,today,addEventButton\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n        }}\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        select={handleDateSelect}\n        events={ {\n          url: `api/pets/${id}`,\n          color: 'white',\n          textColor: 'black'\n        \n        }}\n      \n        eventClick={handleEventClick}\n    \n        />\n        </div>\n\n        </>\n    )\n}\n\nexport default HealthLog;","import { useState } from 'react';\nimport {Card, Image} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom'\nimport HealthLog from './HealthLog';\n\nfunction PetCard({pet, selectPet, onDeletePet, onUpdatePet }) {\n\n// make an edit form\n// update pet on click \n\n    const {id, name, sex, age, weight} = pet;\n\n    const petImage = pet.pet_image;\n    const healthIssue = pet.health_issues\n    const type = pet.type_of_pet\n\n    const [showLog, setShowLog] = useState(true)\n\n    return( \n        <>\n        <Card className='pet-cards'>\n            <Card.Content>\n                <h2>{name}</h2>\n                <Image className='pet-image' src={petImage} alt=\"my pet\"></Image>\n                     <Card.Description id=\"pet-info\">    \n                    <span>\n                    {sex} \n                    </span>\n                    <br></br>\n                    <span>{type}</span>\n                    <br></br>\n                       <span>Age: {age}</span> \n                       <br></br>\n                       <span>Weight: {weight} lbs</span>\n                       <br></br>\n                       <span>Health issues: {healthIssue}</span>\n                       <br></br>\n                  \n                        <button className='pet-button'>\n                        <Link onClick={() => selectPet(pet)} to={'/edit/'+ id}>Edit Info</Link>\n\n                        </button>\n                           \n                       <button className='pet-button' \n                        onClick={() => onDeletePet(id)}\n                        >Remove</button>\n\n                        <button\n                        className='pet-button'\n                        onClick={() => setShowLog(!showLog)}>show/hide log</button>\n                        {showLog ? <HealthLog id={id}/> : null}\n                        </Card.Description>\n                        \n            </Card.Content>\n            \n        </Card>\n\n      \n        </>\n    )\n}\n\nexport default PetCard;","import PetCard from './PetCard';\n\nfunction PetList({pets, selectPet, setPets }) {\n\n\n    function handleDeletePet(id) {\n\n        const updatedPets = pets.filter((pet) => pet.id  !== id);\n\n        fetch(`/api/pets/${id}`, {\n           method: \"DELETE\"\n        });\n        setPets(updatedPets);\n    }\n    \n\n    return (\n        <>\n        {pets.length > 0 ? (\n            pets.map((pet) => (\n                \n                <PetCard key={pet.id} \n              \n                pet={pet}\n                selectPet={selectPet}\n                onDeletePet={handleDeletePet}\n                />\n            ))\n        ) : (\n            <>\n           \n           <p>\n               We're here to help you track of any changes in your pet's behavior, to keep them happy and healthy. Just add a new pet to get started!\n           </p>\n          \n            </>\n        )}\n\n        </>\n    )\n}\n\nexport default PetList;",";\n\nfunction HealthTipCard({text}) {\n\n    return (\n        <>\n         \n     \n            <p>{text}</p>\n        \n    \n        </>\n    )\n}\n\nexport default HealthTipCard","import { useEffect, useState} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport HealthTipCard from './HealthTipCard';\n\nfunction HealthTips() {\n\n    const [healthTips, setHealthTips] = useState([]);\n    \n    useEffect(() => {\n        fetch('/api/health_tips')\n        .then((r) => r.json())\n        .then((data) => setHealthTips(data))\n    },[])\n    const tips = healthTips.map((tip) => (\n        <HealthTipCard key={tip.id} text={tip.text}>\n            </HealthTipCard>\n    ))\n    const randomTip = tips[Math.floor(Math.random() * tips.length)]\n\n    return (\n        <>\n        <h3>\n        <Container className='health-tips'>\n        <h2>Health Tips for Your Furry Friend</h2>\n        <h4>\n        {randomTip}\n        </h4>\n        </Container>\n        </h3>\n        </>\n    )\n}\n\nexport default HealthTips;","import PetList from '../components/PetList';\nimport HealthTips from '../components/HealthTips';\nimport {useEffect} from 'react';\n\n\nfunction HomePage({selectPet, selectedPet, setSelectedPet, pets, setPets, user}) {\n\n\n    useEffect(() => {\n        fetch('/api/pets')\n        .then((r) => r.json())\n        .then((pets) => setPets(pets))\n\n    }, []);\n\n\n    return (\n        <>\n       \n     \n        \n        <PetList pets={pets} setPets={setPets} selectPet={selectPet}/>\n\n        \n    \n        {/* <div id= 'gif-container'>\n            <iframe title=\"dog-licking\" src=\"https://giphy.com/embed/1AhgJ8czcvMreU0haV\" width=\"480\" height=\"270\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><a href=\"https://giphy.com/gifs/roverdotcom-rover-peanut-butter-gifmedogs-1AhgJ8czcvMreU0haV\"> </a>\n\n            <iframe title=\"cats-exercise\" src=\"https://giphy.com/embed/ZQqiFdS5CMcLK\" width=\"480\" height=\"269\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><a href=\"https://giphy.com/gifs/exercising-cat-funny-ZQqiFdS5CMcLK\"> </a>\n\n           \n            <iframe title=\"dog-cat\" src=\"https://giphy.com/embed/jjvIuYHejqi9G\" width=\"480\" height=\"271\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><a href=\"https://giphy.com/gifs/cat-kitten-and-dog-jjvIuYHejqi9G\"> </a>\n        </div>\n    */}\n\n        <HealthTips/>\n        </>\n    )\n}\n\nexport default HomePage;","import { useState } from 'react';\n\nfunction LoginForm({onLogin}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch('/api/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username, password}),\n        }).then((r) => {\n            if (r.ok) {\n                r.json().then((user) => onLogin(user));\n                \n            }else{\n                r.json().then((error) => setErrors(error.errors));\n            }\n        });\n    }\n\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n            <label>Username</label>\n            <input\n            type='text'\n            id='username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            >\n            </input>\n            <label>Password</label>\n            <input\n            type='password'\n            id='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <button type='submit'>Login</button>\n            <p>{errors.map((error) => (\n                <li>{error}</li>\n            ))}</p>\n        </form>\n        </>\n    )\n}\n\nexport default LoginForm;","import {useState} from 'react';\n\n\nfunction SignUpForm({onLogin}) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    function handleSignupSubmit(e) {\n        e.preventDefault();\n        fetch('/api/signup', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }, \n            body: JSON.stringify({\n                username, \n                password,\n                password_confirmation: passwordConfirmation\n            }),\n        }).then((r) => {\n            if (r.ok) {\n                r.json().then((user) => onLogin(user));\n            }else{\n                r.json().then((error) => setErrors(error.errors))\n            }\n        });\n    }\n\n    return(\n        <form onSubmit={handleSignupSubmit}>\n            <label>Username: </label>\n            <input \n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            ></input>\n            <br></br>\n            <label>Password: </label>\n            <input\n            type=\"password\"\n            id='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <br></br>\n            <label>Password Confirmation: </label>\n            <input\n            type=\"password\"\n            id=\"password_confirmation\"\n            value={passwordConfirmation}\n            onChange={(e)=> setPasswordConfirmation(e.target.value)}\n            ></input>\n            <br></br>\n            <button type='submit'>Sign Up</button>\n\n            {errors ? errors.map((err) => (<p>{err}</p>)) \n          : null}\n          \n        </form>\n    )\n}\n\nexport default SignUpForm;","import { useState } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport SignupForm from '../components/SignupForm';\nimport { Button } from 'semantic-ui-react'\n\nfunction Login({ onLogin }) {\n\n    const [showLoginForm, setShowLoginForm] = useState(true)\n\n    return (\n        <div className='login-page'>\n           <h1 className='title'>Healthy Pets</h1>\n            {showLoginForm ? (\n                <>\n                <LoginForm onLogin={onLogin}/>\n                <p>Don't have an account? \n                    <Button\n                    onClick={() => setShowLoginForm(false)}> Sign Up\n                    </Button>\n                </p>\n                {/* <iframe src=\"https://giphy.com/embed/uLjx3T8zp2ZWPe3yN5\" width=\"480\" height=\"480\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/bestfriends-cat-workout-weight-lifting-uLjx3T8zp2ZWPe3yN5\">via GIPHY</a></p> */}\n            \n              {/*cat lifting weights */}\n\n                {/* <iframe src=\"https://giphy.com/embed/uLjx3T8zp2ZWPe3yN5\" width=\"480\" height=\"270\" frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe><a href=\"https://giphy.com/gifs/bestfriends-cat-workout-weight-lifting-uLjx3T8zp2ZWPe3yN5\"></a> */}\n           \n      \n                </>\n\n            ) : (\n                <>\n                <SignupForm onLogin={onLogin}/>\n                <p>\n                    Already have an account? \n                    <Button onClick={() => setShowLoginForm(true)}>\n                        Log In\n                    </Button>\n                </p>\n                \n                </>\n            )}\n        </div>\n    )\n    \n}\n\n\n\nexport default Login;","import { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\nfunction NewPet(\n     {user,\n    //  name, type, age, sex, weight, healthIssue, petImage,\n    //   setAge, setHealthIssue, setName, setPetImage, setSex, setType, setWeight\n    }\n    ) {\n\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n    const [age, setAge] = useState('');\n    const [sex, setSex] = useState('');\n    const [weight, setWeight] = useState('');\n    const [healthIssue, setHealthIssue] = useState('');\n    const [petImage, setPetImage] = useState(null)\n    \n   \n    // const [errors, setErrors] = useState([]);\n    const navigate = useNavigate();\n\n\n    function handleSubmitPet(e) {\n        e.preventDefault();\n\n        const formData = new FormData();\n       \n        formData.append('name', name)\n        formData.append('age', age)\n        formData.append('weight', weight)\n        formData.append('sex', sex)\n        formData.append('type_of_pet', type)\n        formData.append('health_issues', healthIssue)\n        formData.append('pet_image', petImage)\n    \n        fetch('/api/pets', {\n            method: \"POST\",\n     \n            body: formData\n            })\n        .then((r) => {\n            if(r.ok) {\n               navigate('/');\n              //  r.json().then((newPet) => console.log(newPet))\n            }else {\n                r.json().then((error)=> {\n                    // setErrors(error.errors)\n                    console.log(error)\n                });\n            }\n        });\n    }\n\n    return(\n        <>\n        <h2>Add a Pet</h2>\n        <form\n        //  encType='multipart/form-data'\n          onSubmit={handleSubmitPet}>\n            <label>Name: </label>\n            <input\n            type=\"text\"\n            id=\"pet-name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ></input>\n            <label>Type: </label>\n            <input\n            type=\"text\"\n            id=\"pet-type\"\n            value={type}\n            onChange={(e) => setType( e.target.value)}\n            ></input>\n              <label>Sex: </label>\n            <input\n            type=\"text\"\n            id=\"pet-sex\"\n            value={sex}\n            onChange={(e) => setSex( e.target.value)}\n            ></input>\n              <label>Age: </label>\n            <input\n            type=\"text\"\n            id=\"pet-age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            ></input>\n              <label>Weight: </label>\n            <input\n            type=\"text\"\n            id=\"pet-weight\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n            ></input>\n              <label>Health Issues: </label>\n            <input\n            type=\"text\"\n            id=\"pet-health-issue\"\n            value={healthIssue}\n            onChange={(e) => setHealthIssue( e.target.value)}\n            ></input>\n\n            <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setPetImage(e.target.files[0])}\n            ></input>\n              \n            <button type='submit'>Submit</button>\n          \n              \n        </form>\n    \n        {/* {errors.map((error) => (\n                <li>{error}</li>\n            ))} */}\n\n        </>\n    )\n}\n\nexport default NewPet;\n\n","import { useState, useEffect } from \"react\";\n\n\nfunction EditPet(\n  {selectedPet, onPetChange, errors}) {\n\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n    const [age, setAge] = useState('');\n    const [sex, setSex] = useState('');\n    const [weight, setWeight] = useState('');\n    const [healthIssue, setHealthIssue] = useState('');\n    const [id, setPetId] = useState(0);\n   \n\n    useEffect(() => {\n      setPetId(selectedPet.id)\n      setName(selectedPet.name)\n      setAge(selectedPet.age)\n      setWeight(selectedPet.weight)\n      setType(selectedPet.type_of_pet)\n      setSex(selectedPet.sex)\n      setHealthIssue(selectedPet.health_issues)\n     \n    }, [selectedPet]);\n\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      const updatedPet = {\n        id: id, \n        name: name,\n        age: age, \n        weight: weight, \n        health_issues: healthIssue,\n        sex: sex,\n        type_of_pet: type, \n      }\n      onPetChange(updatedPet)\n    }\n\n    \n    return(\n        <>\n        <form \n            onSubmit={handleSubmit}>\n            <label>Name: </label>\n            <input\n            type=\"text\"\n            id=\"pet-name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ></input>\n            <label>Type: </label>\n            <input\n            type=\"text\"\n            id=\"pet-type\"\n            value={type}\n            onChange={(e) => setType( e.target.value)}\n            ></input>\n              <label>Sex: </label>\n            <input\n            type=\"text\"\n            id=\"pet-sex\"\n            value={sex}\n            onChange={(e) => setSex( e.target.value)}\n            ></input>\n              <label>Age: </label>\n            <input\n            type=\"text\"\n            id=\"pet-age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            ></input>\n              <label>Weight: </label>\n            <input\n            type=\"text\"\n            id=\"pet-weight\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n            ></input>\n              <label>Health Issues: </label>\n            <input\n            type=\"text\"\n            id=\"pet-health-issue\"\n            value={healthIssue}\n            onChange={(e) => setHealthIssue( e.target.value)}\n            ></input>\n\n            <button type='submit'>Submit</button>\n            {errors ? errors.map((err) => (\n              <p>{err}</p>\n            )) : null}\n          \n        </form>\n\n        {/* <form onSubmit={handleImageChange}>\n        <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setPetImage(e.target.files[0])}\n            ></input>\n        </form> */}\n\n        </>\n    )\n}\n\nexport default EditPet;","import { useState, useEffect } from 'react'\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport HomePage from '../pages/HomePage';\nimport Login from '../pages/Login';\nimport NewPet from '../pages/NewPet';\nimport EditPet from './EditPet';\nimport PetCard from './PetCard';\nimport HealthLog from './HealthLog';\n\n\n\nfunction App() {\n\n   const [user, setUser] = useState(null);\n   const [pets, setPets] = useState([]);\n    \n   const [selectedPet, setSelectedPet] = useState({});\n   const [errors, setErrors] = useState([]);\n   const navigate = useNavigate();\n  \n \n   function selectPet(petObj) {\n    setSelectedPet(petObj)\n    console.log(petObj)\n}\n\n  function handlePetChange(petObj) {\n\n  fetch(`/api/pets/${petObj.id}`, \n  {\n      method: \"PATCH\",\n      headers: {\n          \"Content-Type\": \"application/json\" } ,\n      body: JSON.stringify(petObj)\n  })\n  .then((r) => {\n      if(r.ok) {\n          r.json()\n  .then(_ => {\n      const updatedPetList = [...pets].map((pet) => {\n          if(pet.id === petObj.id){\n              return petObj\n          } else {\n              return pet;\n          }\n      }) \n      setPets(updatedPetList);\n      navigate('/');\n\n      console.log(updatedPetList);\n  })\n      }else {\n          r.json().then((error) => setErrors(error.errors))\n          \n      }\n  })\n\n}\n \n\n   useEffect(() => {\n        fetch('/api/me').then((r) => {\n            if (r.ok) {\n                r.json().then((user) => setUser(user));\n            }\n        });\n    }, []);\n\n\n    if (!user) return <Login  onLogin={setUser} />;\n\n\n  return (\n    <div>\n        \n        <NavBar user={user} setUser={setUser}/>\n        <main>\n          <Routes>\n            <Route exact path='/new' element={<NewPet user={user}/>}>\n            </Route>\n            <Route exact path='/:id' element={<PetCard />}></Route>\n            <Route exact path='/edit/:id' element={<EditPet selectPet={selectPet} selectedPet={selectedPet} setSelectedPet={setSelectedPet} onPetChange={handlePetChange}\n        \n            />}\n            ></Route>\n            <Route exact path='health-log/:id' element={<HealthLog pets={pets} selectedPet={selectedPet} setSelectedPet={setSelectedPet} />}></Route>\n            <Route exact path='/' element={<HomePage  selectPet={selectPet} pets={pets} setPets={setPets} user={user} setUser={setUser}/>}>\n            </Route>\n         \n          </Routes>\n\n          {errors ? errors.map((err) => (<p>{err}</p>)) \n          : null}\n\n        </main>\n   \n  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}